/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Clases.Exportacion;
import Clases.ExportacionCargaPesada;
import Clases.ExportacionCargaSuelta;

/**
 *
 * @author cesc
 */
public class DialogoNuevaExportacion extends javax.swing.JDialog {
    
    private Exportacion nuevaExportacion = null;
    /**
     * Creates new form DialogoNuevaExportacion
     */
    public DialogoNuevaExportacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Ocultamos los campos específicos justo después de que son creados.
        lblTipoCarga.setVisible(false);
        cmbTipoCarga.setVisible(false);
        lblPiesCarga.setVisible(false);
        txtPiesCarga.setVisible(false);

        this.setLocationRelativeTo(parent);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIDCliente = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        cmbTipoExportacion = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        txtNombreCompleto = new javax.swing.JTextField();
        lblZona = new javax.swing.JLabel();
        lblKilos = new javax.swing.JLabel();
        lblTipoExportacion = new javax.swing.JLabel();
        lblTipoServicio = new javax.swing.JLabel();
        cmbTipoServicio = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        lblPiesCarga = new javax.swing.JLabel();
        txtZonaEnvio = new javax.swing.JTextField();
        txtKilogramos = new javax.swing.JTextField();
        txtPiesCarga = new javax.swing.JTextField();
        lblTipoCarga = new javax.swing.JLabel();
        cmbTipoCarga = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIDCliente.setText("ID Cliente");

        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        cmbTipoExportacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione un Tipo>", "Carga Pesada", "Carga Suelta" }));
        cmbTipoExportacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoExportacionItemStateChanged(evt);
            }
        });
        cmbTipoExportacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoExportacionActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre Completo");

        lblZona.setText("Zona de Envío");

        lblKilos.setText("Kilogramos");

        lblTipoExportacion.setText("Tipo de Exportación");

        lblTipoServicio.setText("Tipo de Servicio");

        cmbTipoServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione un Servicio>", "Barco", "Avión" }));
        cmbTipoServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoServicioActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblPiesCarga.setText("Pies de la carga");

        lblTipoCarga.setText("Tipo de carga");

        cmbTipoCarga.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione la Carga>", "Contenedor Refrigerado", "Contenedor no refrigerado", "Carga embalada" }));
        cmbTipoCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoCargaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTipoServicio)
                                    .addComponent(lblPiesCarga))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTipoServicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPiesCarga)
                                    .addComponent(cmbTipoCarga, 0, 283, Short.MAX_VALUE)))
                            .addComponent(lblTipoCarga)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTipoExportacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbTipoExportacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombre)
                                    .addComponent(lblKilos)
                                    .addComponent(lblZona)
                                    .addComponent(lblIDCliente))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreCompleto)
                                    .addComponent(txtZonaEnvio)
                                    .addComponent(txtKilogramos)
                                    .addComponent(txtIdCliente)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoExportacion)
                    .addComponent(cmbTipoExportacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDCliente)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZona)
                    .addComponent(txtZonaEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblKilos)
                    .addComponent(txtKilogramos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblTipoServicio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cmbTipoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPiesCarga)
                    .addComponent(txtPiesCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoCarga)
                    .addComponent(cmbTipoCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoExportacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoExportacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoExportacionActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
            try {
            // --- 1. Leer y validar datos comunes ---
            String idCliente = txtIdCliente.getText();
            String nombreCompleto = txtNombreCompleto.getText();
            String zonaEnvio = txtZonaEnvio.getText();
            // Lanza una excepción si los campos están vacíos
            if (idCliente.trim().isEmpty() || nombreCompleto.trim().isEmpty() || zonaEnvio.trim().isEmpty()) {
                throw new IllegalArgumentException("Los campos de texto no pueden estar vacíos.");
            }
            
            if (!idCliente.matches("\\d{1}-\\d{4}-\\d{4}")) {
                throw new IllegalArgumentException("El formato del ID de cliente es incorrecto. Use X-XXXX-XXXX.");
            }

            double kilogramos = Double.parseDouble(txtKilogramos.getText());
            String tipoServicio = (String) cmbTipoServicio.getSelectedItem();
            if (tipoServicio.equals("<Seleccione un Servicio>")) {
                // Lanza una excepción si no se ha seleccionado una opción válida
                throw new IllegalArgumentException("Debe seleccionar un tipo de servicio (Barco o Avión).");
            }

            // --- 2. Determinar qué tipo de objeto crear ---
            String tipoExportacion = (String) cmbTipoExportacion.getSelectedItem();

            this.nuevaExportacion = null; 

            if (tipoExportacion.equals("Carga Pesada")) {
    
                String tipoCarga = (String) cmbTipoCarga.getSelectedItem();
                if (tipoCarga.equals("<Seleccione la Carga>")) {
                    throw new IllegalArgumentException("Debe seleccionar un tipo de carga.");
                }

                // Crea un objeto de tipo ExportacionCargaPesada
                nuevaExportacion = new ExportacionCargaPesada(idCliente, nombreCompleto, zonaEnvio, tipoServicio, kilogramos, tipoCarga);

            } else if (tipoExportacion.equals("Carga Suelta")) {
                double piesCarga = Double.parseDouble(txtPiesCarga.getText());
                // Crea un objeto de tipo ExportacionCargaSuelta
                nuevaExportacion = new ExportacionCargaSuelta(idCliente, nombreCompleto, zonaEnvio, tipoServicio, kilogramos, piesCarga);

            } else {
                // Si no se seleccionó un tipo válido
                 javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de exportación válido.", "Error de Validación", javax.swing.JOptionPane.ERROR_MESSAGE);
                return; // Termina la ejecución del método
            }

            // --- 3. Si todo salió bien ---
            // Por ahora, solo mostraremos el objeto en consola para verificar
            System.out.println("Exportación creada con éxito: " + nuevaExportacion.toString());

            // Cierra la ventana de diálogo
            this.dispose(); 

        } catch (NumberFormatException e) {
            // Error si el usuario ingresa texto en un campo numérico
            javax.swing.JOptionPane.showMessageDialog(this, "Error en el formato de número. Verifique los kilogramos o pies.", "Error de Formato", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            // Captura otras validaciones (campos vacíos, etc.)
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error de Validación", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    public Exportacion getNuevaExportacion() {
        return this.nuevaExportacion;
    }
    
    private void cmbTipoServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoServicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoServicioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
            this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void cmbTipoCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoCargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoCargaActionPerformed

    private void cmbTipoExportacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoExportacionItemStateChanged
        // Se obtiene el item seleccionado como un String
        String tipoSeleccionado = (String) cmbTipoExportacion.getSelectedItem();

        // Si no hay nada seleccionado, no hace nada
        if (tipoSeleccionado == null) {
            return;
        }

        // Oculta todos los campos específicos para empezar de cero
        lblTipoCarga.setVisible(false);
        cmbTipoCarga.setVisible(false);
        lblPiesCarga.setVisible(false);
        txtPiesCarga.setVisible(false);

        // Compara la selección y muestra los campos correspondientes
        if (tipoSeleccionado.equals("Carga Pesada")) {
            lblTipoCarga.setVisible(true);
            cmbTipoCarga.setVisible(true);
        } else if (tipoSeleccionado.equals("Carga Suelta")) {
            lblPiesCarga.setVisible(true);
            txtPiesCarga.setVisible(true);
        }
    }//GEN-LAST:event_cmbTipoExportacionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoNuevaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoNuevaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoNuevaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoNuevaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogoNuevaExportacion dialog = new DialogoNuevaExportacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbTipoCarga;
    private javax.swing.JComboBox<String> cmbTipoExportacion;
    private javax.swing.JComboBox<String> cmbTipoServicio;
    private javax.swing.JLabel lblIDCliente;
    private javax.swing.JLabel lblKilos;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPiesCarga;
    private javax.swing.JLabel lblTipoCarga;
    private javax.swing.JLabel lblTipoExportacion;
    private javax.swing.JLabel lblTipoServicio;
    private javax.swing.JLabel lblZona;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtKilogramos;
    private javax.swing.JTextField txtNombreCompleto;
    private javax.swing.JTextField txtPiesCarga;
    private javax.swing.JTextField txtZonaEnvio;
    // End of variables declaration//GEN-END:variables
}
